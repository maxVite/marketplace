services:
  mongodb:
    image: prismagraphql/mongo-single-replica:4.4.3-bionic # todo: replace this, it's an image for single replica mode and testing locally
    container_name: mongodb
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: marketplace_db
      INIT_WAIT_SEC: 3
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      mongodb:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: example
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 10s
      timeout: 5s
      retries: 5

  # TODO: fix rabbitmq connection issue
  # order-service:
  #   build:
  #     context: .
  #     dockerfile: apps/order/Dockerfile
  #   container_name: order
  #   restart: unless-stopped
  #   ports:
  #     - '3000:3000'
  #   env_file: ./apps/order/.env
  #   depends_on:
  #     mongodb:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy

  # invoice-service:
  #   build:
  #     context: .
  #     dockerfile: apps/invoice/Dockerfile
  #   container_name: invoice
  #   restart: unless-stopped
  #   ports:
  #     - '3001:3001'
  #   env_file: ./apps/invoice/.env
  #   depends_on:
  #     mongodb:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy

volumes:
  mongo_data:
  rabbitmq_data:
